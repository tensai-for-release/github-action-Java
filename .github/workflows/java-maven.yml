#name of the workflow
name: My Java Manual Workflow
on: 
  workflow_dispatch:



jobs:
  Build-Test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2   

    - name: Build project with Maven
      run: mvn -B package --file pom.xml -DskipTests 

  publish:
    runs-on: ubuntu-latest
    needs: [Build-Test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 14
      - run: mvn -B package --file pom.xml -DskipTests 
#      - run: mvn dependency:tree -DoutputType=dot --batch-mode --non-recursive --file="pom.xml"
      - run: mkdir staging && cp target/*jar-with-dependencies.jar staging
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: staging  

  SAST-Snyk:
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif 
  
  SonarCloud-scan:
    runs-on: ubuntu-latest
    needs: [SAST-Snyk]
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: my-custom-directory
        args: >
          -Dsonar.organization=my-organization
          -Dsonar.projectKey=my-projectkey
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.sources=lib/
          -Dsonar.test.exclusions=tests/**
          -Dsonar.tests=tests/
          -Dsonar.verbose=true
